#!/bin/bash
#
# Copyright 2017, Data61
# Commonwealth Scientific and Industrial Research Organisation (CSIRO)
# ABN 41 687 119 230.
#
# This software may be distributed and modified according to the terms of
# the BSD 2-Clause license. Note that NO WARRANTY is provided.
# See "LICENSE_BSD2.txt" for details.
#
# @TAG(DATA61_BSD)
#

set -e

# Determine root directory of script. This is some black magic found on stackoverflow
pushd . > /dev/null
SCRIPT_PATH="${BASH_SOURCE[0]}";
if ([ -h "${SCRIPT_PATH}" ]) then
  while([ -h "${SCRIPT_PATH}" ]) do cd `dirname "$SCRIPT_PATH"`; SCRIPT_PATH=`readlink "${SCRIPT_PATH}"`; done
fi
cd `dirname ${SCRIPT_PATH}` > /dev/null
SCRIPT_PATH=`pwd`;
popd  > /dev/null

name="build"
args="-C ${SCRIPT_PATH}/configs/sel4test.cmake"
toolchain=arm-linux-gnueabi-

while [ "$#" -ne 0 ]; do
    name="$name"_$1
    config="${SCRIPT_PATH}/configs/$1.cmake"
    if ! [ -e "$config" ]; then
        echo "Config file \"$config\" does not exist"
        exit 1
    fi
    case "$1" in
        x86|ia32|x86_64|x64)
            toolchain=
        ;;
        hikey64|tx1)
            toolchain=aarch64-linux-gnu-
    esac
    args="$args -C $config"
    shift
done

toolchainfile="kernel/gcc.cmake"

if ! [ -e "$toolchainfile" ]; then
    echo "Could not find $toolchainfile"
    exit 1
fi

mkdir $name
cd $name
cmake -DCROSS_COMPILER_PREFIX=$toolchain -DCMAKE_TOOLCHAIN_FILE=../$toolchainfile $args -G Ninja ..
# Make sure our configurations reach a stable state
for run in {1..20}
do
    newts=`ls --full-time CMakeCache.txt`
    if [ "$ts" == "$newts" ]
    then
        break
    fi
    ts=$newts
    cmake ..
done
